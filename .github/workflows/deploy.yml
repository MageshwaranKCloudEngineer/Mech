name: MechWiz CI/CD (Local K8s)

on:
  push:
    branches:
      - dev
      - test
      - stage
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: mechwiz
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  VERSION_TAG: ${{ github.run_number }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit tests
        run: |
          echo "âœ… Running tests..."
          python -m unittest discover -s tests || echo "No tests found"

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t $REGISTRY/$IMAGE_NAME:$VERSION_TAG .

      - name: Push Docker Image
        run: docker push $REGISTRY/$IMAGE_NAME:$VERSION_TAG

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/test' || github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure local kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          ENV=${{ github.ref_name }}
          kubectl create namespace $ENV --dry-run=client -o yaml | kubectl apply -f -

          kubectl kustomize ./k8s | \
            sed "s|IMAGE_TAG|${{ github.run_number }}|g" | \
            sed "s|IMAGE_REPO|$REGISTRY/$IMAGE_NAME|g" | \
            kubectl apply -n $ENV -f -

